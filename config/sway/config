# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

#
# general config
#
    set {
        $mod Mod4

        # Font
        $font System San Francisco Display 10

        # terminal
        $term alacritty

        # Home row direction keys, like vim
        $left h
        $down j
        $up k
        $right l

        # Wallpaper directory
        $wallpaper_dir ~/Pictures/wallpapers

        $notify-send-brightness notify-send "brightness: $(brightnessctl get) / $(brightnessctl max)" -t 1000

        $screenshots-dir ~/Pictures/screenshots/
        $notify-send-screenshot "Screenshot created in $screenshots-dir"
    }

    # reload sway config
    bindsym $mod+Shift+r exec swaymsg reload

    # window border
    default_border pixel 2
    titlebar_border_thickness 1
    titlebar_padding 1 1

    focus_follows_mouse no

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

output eDP-1 scale 1.5

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
    input * {
        xkb_layout ch,us
        xkb_options "grp:win_space_toggle"
    }
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod normal

### Key bindings
bindsym {
    # Start a terminal
    $mod+Return exec $term

    # Kill focused window
    $mod+Shift+q kill

    # use wofi as launcher
    $mod+d exec "wofi --show drun"
    $mod+Shift+d exec "wofi --show run"
    # show open windows, requires jq,rofi
    $mod+Tab exec swaymsg \[con_id=$(swaymsg -t get_tree | jq -r '.nodes | .[] | .nodes | . [] | select(.nodes != null) | .nodes | .[] | select(.name != null) | "\(.id?) \(.name?)"' | wofi -dmenu -p "open windows" -i | awk '{print $1}')] focus

    # mako
    $mod+Delete    exec makoctl dismiss
    $mod+backslash exec makoctl invoke

    # Reload the configuration file
    $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

    # CopyQ
    Shift+Alt+v exec copyq eval 'if (visible()) hide(); else show()'
}

for_window [app_id="^launcher$"] floating enable, border none, opacity 0.8

#
# Moving around:
#
    bindsym {
        # Move your focus around
        $mod+$left focus left
        $mod+$down focus down
        $mod+$up focus up
        $mod+$right focus right
        # Or use $mod+[up|down|left|right]
        $mod+Left focus left
        $mod+Down focus down
        $mod+Up focus up
        $mod+Right focus right

        # Move the focused window with the same, but add Shift
        $mod+Shift+$left move left
        $mod+Shift+$down move down
        $mod+Shift+$up move up
        $mod+Shift+$right move right
        # Ditto, with arrow keys
        $mod+Shift+Left move left
        $mod+Shift+Down move down
        $mod+Shift+Up move up
        $mod+Shift+Right move right
    }
#
# Workspaces:
#
    set {
        $workspace1_chat "1 "
        $workspace2_mail "2 "
        $workspace3_code "3 "
        $workspace4_browser "4 "
        $workspace5_filebrowser "5 "
        $workspace6_misc "6 "
        $workspace7_imgprocessing "7 "
        $workspace8 "8 "
        $workspace9 "9 "
        $workspace10_terminal "10 "
    }

    bindsym {
          $mod+1 workspace $workspace1_chat
          $mod+2 workspace $workspace2_mail
          $mod+3 workspace $workspace3_code
          $mod+4 workspace $workspace4_browser
          $mod+5 workspace $workspace5_filebrowser
          $mod+6 workspace $workspace6_misc
          $mod+7 workspace $workspace7_imgprocessing
          $mod+8 workspace $workspace8
          $mod+9 workspace $workspace9
          $mod+0 workspace $workspace10_terminal

          # Move focused container to workspace
          $mod+Shift+1 move container to workspace $workspace1_chat
          $mod+Shift+2 move container to workspace $workspace2_mail
          $mod+Shift+3 move container to workspace $workspace3_code
          $mod+Shift+4 move container to workspace $workspace4_browser
          $mod+Shift+5 move container to workspace $workspace5_filebrowser
          $mod+Shift+6 move container to workspace $workspace6_misc
          $mod+Shift+7 move container to workspace $workspace7_imgprocessing
          $mod+Shift+8 move container to workspace $workspace8
          $mod+Shift+9 move container to workspace $workspace9
          $mod+Shift+0 move container to workspace $workspace10_terminal

          $mod+Prior              workspace prev
          $mod+Control+Left       workspace prev
          $mod+Control+h          workspace prev
          $mod+Next               workspace next
          $mod+Control+Right      workspace next
          $mod+Control+l          workspace next
          $mod+Shift+Prior        move container to workspace prev
          $mod+Shift+Next         move container to workspace next
          $mod+Shift+BackSpace    workspace back_and_forth
          $mod+Shift+b            move container to workspace back_and_forth
    }

    # Create empty workspace
   bindsym $mod+n                   exec   $HOME/.dotfiles/config/sway/bin/empty_workspace.sh

#
# Layout stuff:
#
    bindsym {
        $mod+b splith
        $mod+v splitv

        $mod+w layout tabbed
        $mod+e layout toggle split

        $mod+f fullscreen

        $mod+Shift+space floating toggle

        # Swap focus between the tiling area and the floating area
        $mod+space focus mode_toggle

        # Move focus to the parent container
        $mod+a focus parent
    }

#
# Scratchpad:
#
    bindsym {
        # Move the currently focused window to the scratchpad
        $mod+Shift+s move scratchpad

        # Show the next scratchpad window or hide the focused scratchpad window.
        # If there are multiple scratchpad windows, this command cycles through them.
        $mod+s scratchpad show
    }

#
# Brightness:
# requires https://github.com/Hummer12007/brightnessctl, pacman -S brightnessctl
#
    bindsym --locked XF86MonBrightnessUp   exec --no-startup-id brightnessctl set 10%+ && $notify-send-brightness
    bindsym --locked XF86MonBrightnessDown exec --no-startup-id brightnessctl set 10%- && $notify-send-brightness

#
# Resizing containers:
#
    mode "resize" {
        # left will shrink the containers width
        # right will grow the containers width
        # up will shrink the containers height
        # down will grow the containers height
        bindsym $left resize shrink width 10px
        bindsym $down resize grow height 10px
        bindsym $up resize shrink height 10px
        bindsym $right resize grow width 10px

        # Ditto, with arrow keys
        bindsym Left resize shrink width 10px
        bindsym Down resize grow height 10px
        bindsym Up resize shrink height 10px
        bindsym Right resize grow width 10px

        # Return to default mode
        bindsym Return mode "default"
        bindsym Escape mode "default"
    }
    bindsym $mod+r mode "resize"

#
# Touch pad
#
    set $mode_thinkpad Thinkpad (t) toggle touchpad
    mode "$mode_thinkpad" {
        bindsym t exec --no-startup-id $HOME/.dotfiles/util/misc/toggle-touchpad.sh, mode "default"

        bindsym Return mode "default"
        bindsym Escape mode "default"
    }
    bindsym $mod+T mode "$mode_thinkpad"

#
# Menu for shutdown, suspend, hibernate
#
    set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
    mode "$mode_system" {
        bindsym l exec --no-startup-id $Locker, mode "default"
        bindsym e exec --no-startup-id i3-msg exit, mode "default"
        bindsym s exec --no-startup-id $Locker && systemctl suspend, mode "default"
        bindsym h exec --no-startup-id $Locker && systemctl hibernate, mode "default"
        bindsym r exec --no-startup-id systemctl reboot, mode "default"
        bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
    }
    bindsym $mod+Pause mode "$mode_system"

#
# Volume Controls:
#
    bindsym {
        XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
        XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
        XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
        XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
    }

#
# Screenshot using flameshot
#
    bindsym --locked Print exec flameshot gui

#
# screen menu:
# swaymsg -t get_outputs
    set $scr_int eDP-1
    set $scr_ext HDMI-A-1

    set $mode_display Screen (n)otebook (w)orkstation (t)v (4)k-tv
    mode "$mode_display" {
        bindsym --locked n output $scr_ext disable, output $scr_int enable scale 1.6; mode "default"
        bindsym --locked w output $scr_ext enable scale 1.3, output $scr_int disable; mode "default"
        bindsym --locked t output $scr_ext enable scale 1.5 mode 1920x1080@60Hz, output $scr_int disable; mode "default"
        bindsym --locked 4 output $scr_ext enable scale 2.5 mode 3840x2160@30Hz, output $scr_int disable; mode "default"

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
    }
    bindsym --locked $mod+m mode "$mode_display"
    bindsym $mod+Shift+m exec swaymsg output $scr_ext disable, output $scr_int enable scale 1.6
    bindsym $mod+p exec wdisplays

#
# Autostart
#
    exec mako
    exec --no-startup-id nm-applet --indicator
    exec --no-startup-id nextcloud
    exec --no-startup-id redshift
    exec --no-startup-id copyq
    exec --no-startup-id setrandom $wallpaper_dir
    exec --no-startup-id $(gnome-keyring-daemon --start)
    exec export SSH_AUTH_SOCK
    exec --no-startup-id flameshot
    # ensure that systemd/dbus is aware of these environment variables. Used for flameshot
    exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
    exec hash dbus-update-activation-environment 2>/dev/null && \
     dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK


#
# Status Bar:
# requires https://github.com/Alexays/Waybar
#
    bar {
        tray_output *
        swaybar_command waybar
    }

#
# Floating Windows
#
    # Program-Workspace Default Mapping
    assign [class="Thunderbird"]    $workspace2_mail
    assign [class="firefox"]        $workspace4_browser
    assign [class="jetbrains-idea"] $workspace3_code

    for_window [app_id="pavucontrol"] floating enable

include /etc/sway/config.d/*
