call plug#begin('~/.local/share/nvim/plugged')

Plug 'preservim/nerdtree'
Plug 'kien/ctrlp.vim'

"Plug 'davidhalter/jedi-vim', { 'on': []}
Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }

" highlights multiple instances of the same word that is under the cursor
Plug 'RRethy/vim-illuminate'

" input quote and brackets as pairs
Plug 'jiangmiao/auto-pairs'

Plug 'scrooloose/nerdcommenter'

Plug 'SirVer/ultisnips'

" status/tabline for vim
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

Plug 'morhetz/gruvbox'

Plug 'machakann/vim-highlightedyank'
call plug#end()


set nocompatible        " use Vim defaults (much better!)
colorscheme gruvbox
set background=dark
syntax on
filetype on
filetype indent on
filetype plugin on
set number
set bs=indent,eol,start	" allow backspacing over everything in insert mode
set ruler               " show the cursor position all the time
set hlsearch	          " highlight search patterns
set path=** 	          " find files in subdirectories
set autoindent	        " handy for email and programming
set report=1	          " *always* show me changes that commands make
set shiftwidth=2        " i like minimal indentation. see tabstops (ts), too.
set shiftround
set expandtab
set autoindent
set tabstop=2
set softtabstop=2
set showmode	         " portable method to show the current mode on bottom line
set tabstop=2	         " this should be the same as the next line. not always.
set ts=2               " only indent 2 spaces. see shiftwidth (sw) above.
set terse              " no news is good news.

" F1: set number
nmap <F1> :set number<CR>
" F2: set nonumber
nmap <F2> :set nonumber<CR>
" F12: NERDTroggle<CR>
nmap <F12> :NERDTreeToggle<CR>

" where to put temporary files. good for most systems
"set directory=/tmp
" Tell vim to remember certain things when we exit
if !has('nvim')
"  '10  :  marks will be remembered for up to 10 previously edited files
"  "100 :  will save up to 100 lines for each register
"  :20  :  up to 20 lines of command-line history will be remembered
"  %    :  saves and restores the buffer list
"  n... :  where to save the viminfo files
  set viminfo='10,\"100,:20,%,n~/.viminfo
else
  " neovim ist not compatible with the viminfo-File-Format defined above
  " Do nothing here to use the neovim default (set viminfo=~/.local/share/nvim/shada/main.shada)
endif

" Have Vim jump to the last position when reopening a file
if has("autocmd")
  au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
     \| exe "normal! g'\"" | endif
endif


" deoplete config
let g:deoplete#enable_at_startup = 1
" deoplete tab-complete
inoremap <silent><expr> <C-n> pumvisible() ? "\<C-n>" : deoplete#mappings#manual_complete()
inoremap <silent><expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"

" CTRL-P
" let g:ctrlp_by_filename = 1
let g:ctrlp_open_new_file = 't'
" switch ctrl-t and cr new tab/this tab
let g:ctrlp_prompt_mappings = {
    \ 'AcceptSelection("e")': ['<c-t>'],
    \ 'AcceptSelection("t")': ['<cr>', '<2-LeftMouse>'],
    \ }

" airline
let g:airline_theme='powerlineish'
"let g:airline_solarized_bg='light'
let g:airline_powerline_fonts = 1

" insert mode
map <C-t> <Esc>:tabnew
map <C-right> <Esc>:tabnext
map <C-left> <Esc>:tabprevious

if filereadable("~/.config/vim/vimrc_local")
  source ~/.config/vim/vimrc_local
endif
